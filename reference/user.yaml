openapi: 3.0.0
info:
  title: user
  version: '1.0'
  description: Пользователи
servers:
  - url: 'http://localhost:3000/user'
paths:
  /authenticate:
    post:
      summary: authenticate
      operationId: users-authenticate
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                sLogin:
                  type: string
                sPassword:
                  type: string
              required:
                - sLogin
                - sPassword
            examples: {}
        description: ''
      description: Авторизация пользователя по логину и паролю
      tags:
        - users
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                  - allOf:
                      - $ref: ../models/User.yaml
                      - $ref: ../models/User-jwt-tokens.yaml
                  - type: object
                    properties:
                      sError:
                        type: string
                        description: Текст причины неуспешной авторизации
                    required:
                      - sError
    parameters: []
  /refreshToken:
    post:
      summary: refreshToken
      operationId: users-refreshToken
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ../models/User-jwt-tokens.yaml
        '401':
          description: Unauthorized
      requestBody:
        content:
          application/json:
            schema:
              $ref: ../models/User-jwt-tokens.yaml
      tags:
        - users
      description: Обновление токена авторизации
    parameters: []
  /update-notification-settings:
    post:
      summary: Изменение настройки уведомления
      operationId: post-update-notification-settings
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ../models/User-notification-settings.yaml
      requestBody:
        content:
          application/json:
            schema:
              $ref: ../models/User-notification-settings.yaml
        description: ''
      description: ''
  /update-salary-preferences:
    post:
      summary: ''
      operationId: post-update-salary-preferences
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ../models/User-salary-preferences.yaml
      requestBody:
        content:
          application/json:
            schema:
              $ref: ../models/User-salary-preferences-adding.v1.yaml
  '/avatar/{userId}':
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties: {}
      operationId: get-avatar
      description: Должен возвращат аватар пользовавтеля
    parameters:
      - schema:
          type: number
        name: userId
        in: path
        required: true
components:
  schemas:
    PermissionsDto:
      title: PermissionsDto
      type: object
      description: Информация о правах доступа
      properties:
        bFullDataAccess:
          type: boolean
          description: 'Полный доступ к данным, до загрузки ролей'
        bAdministration:
          type: boolean
          description: 'Доступ к админ интерфейсу (загрузка, выгрузка, редактирование базы данных)'
        bPlanningParticipantsDistribution:
          type: boolean
          description: Распределение участников процесса планирования
        bViewData:
          type: boolean
          description: Просмотр данных
        bEditData:
          type: boolean
          description: Редактирование данных
        bCreatingCustomFilters:
          type: boolean
          description: Создание кастомных фильтров (в рамках полномочий)
        bAnalytics:
          type: boolean
          description: Доступ в аналитику по изменения (в рамках полномочий)
        bNotifications:
          type: boolean
          description: Доступ к уведомлениям по изменениям (в рамках полномочий)
        bPlanApproveAndSubmit:
          type: boolean
          description: 'Approve & Submit плана'
        bViewPlanStatus:
          type: boolean
          description: Просмотр статуса изменения ресурсного плана
        bPlanApprove:
          type: boolean
          description: Approve плана
      required:
        - bFullDataAccess
        - bAdministration
        - bPlanningParticipantsDistribution
        - bViewData
        - bEditData
        - bCreatingCustomFilters
        - bAnalytics
        - bNotifications
        - bPlanApproveAndSubmit
        - bViewPlanStatus
        - bPlanApprove
