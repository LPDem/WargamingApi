openapi: 3.0.0
info:
  title: Resource planning backend
  version: '1.0'
servers:
  - url: 'http://localhost:3000'
paths:
  /users/authenticate:
    post:
      summary: users/authenticate
      operationId: post-users-authenticate
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                sLogin:
                  type: string
                sPassword:
                  type: string
              required:
                - sLogin
                - sPassword
            examples: {}
        description: ''
      description: Авторизация пользователя по логину и паролю
      tags:
        - users
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      sUserName:
                        type: string
                        description: Имя пользователя для заголовка
                      sToken:
                        type: string
                        description: Токен JWT
                      sRefreshToken:
                        type: string
                        description: Токен JWT
                    required:
                      - sUserName
                      - sToken
                      - sRefreshToken
                  - properties:
                      sError:
                        type: string
                        description: Текст причины неуспешной авторизации
                    required:
                      - sError
                type: object
  /users/refreshToken:
    post:
      summary: users/refreshToken
      operationId: post-users-refreshToken
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  sToken:
                    type: string
                  sRefreshToken:
                    type: string
                required:
                  - sToken
                  - sRefreshToken
        '401':
          description: Unauthorized
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                sToken:
                  type: string
                sRefreshToken:
                  type: string
              required:
                - sToken
                - sRefreshToken
      tags:
        - users
      description: Обновление токена авторизации
  /getMenu:
    get:
      summary: getMenu
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  aProducts:
                    type: array
                    description: список продуктов
                    items:
                      type: object
                      description: Данные одного продукта
                      properties:
                        iId:
                          type: number
                          description: Id продукта
                        sName:
                          type: string
                          description: Название продукта
                        aDepartments:
                          type: array
                          description: Список подразделений продукта
                          items:
                            type: object
                            description: Данные одного подразделения
                            properties:
                              iId:
                                type: number
                                description: Id подразделения
                              sName:
                                type: string
                                description: Название подразделения
                            required:
                              - iId
                              - sName
                      required:
                        - iId
                        - sName
                        - aDepartments
                required:
                  - aProducts
      operationId: get-getMenu
      description: Получение содержимого меню для левой панели
  /import/roles:
    post:
      summary: import/roles
      operationId: post-import-roles
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  bSuccess:
                    type: boolean
                    description: Признак успешной загрузки
                  sError:
                    type: string
                    description: 'Описание ошибок загрузки, если они есть'
                required:
                  - bSuccess
      description: Загрузка мастер-данных ролей и доступа
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                sFileContent:
                  type: string
                  description: 'Содержимое файла, с префиксом data:text/plain;base64,'
              required:
                - sFileContent
components:
  schemas: {}
