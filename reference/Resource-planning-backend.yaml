openapi: 3.0.0
info:
  title: Resource planning backend
  version: '1.0'
servers:
  - url: 'http://localhost:3000'
paths:
  /users/authenticate:
    post:
      summary: authenticate
      operationId: users-authenticate
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                sLogin:
                  type: string
                sPassword:
                  type: string
              required:
                - sLogin
                - sPassword
            examples: {}
        description: ''
      description: Авторизация пользователя по логину и паролю
      tags:
        - users
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      sUserName:
                        type: string
                        description: Имя пользователя для заголовка
                      sToken:
                        type: string
                        description: Токен JWT
                      sRefreshToken:
                        type: string
                        description: Токен JWT
                      oPermissions:
                        $ref: '#/components/schemas/PermissionsDto'
                    required:
                      - sUserName
                      - sToken
                      - sRefreshToken
                      - oPermissions
                  - properties:
                      sError:
                        type: string
                        description: Текст причины неуспешной авторизации
                    required:
                      - sError
                type: object
  /users/refreshToken:
    post:
      summary: refreshToken
      operationId: users-refreshToken
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  sToken:
                    type: string
                  sRefreshToken:
                    type: string
                required:
                  - sToken
                  - sRefreshToken
        '401':
          description: Unauthorized
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                sToken:
                  type: string
                sRefreshToken:
                  type: string
              required:
                - sToken
                - sRefreshToken
      tags:
        - users
      description: Обновление токена авторизации
  /common/getMenu:
    get:
      summary: getMenu
      tags:
        - common
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  aProducts:
                    type: array
                    description: список продуктов
                    items:
                      type: object
                      description: Данные одного продукта
                      properties:
                        iId:
                          type: number
                          description: Id продукта
                        sName:
                          type: string
                          description: Название продукта
                        aDepartments:
                          type: array
                          description: Список подразделений продукта
                          items:
                            type: object
                            description: Данные одного подразделения
                            properties:
                              iId:
                                type: number
                                description: Id подразделения
                              sName:
                                type: string
                                description: Название подразделения
                            required:
                              - iId
                              - sName
                      required:
                        - iId
                        - sName
                        - aDepartments
                required:
                  - aProducts
      operationId: common-getMenu
      description: Получение содержимого меню для левой панели
    parameters: []
  /masterData/importRoles:
    post:
      summary: importRoles
      operationId: masterData-importRoles
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportMasterDataResultDto'
      description: Загрузка мастер-данных ролей и доступа
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImportMasterDataRequestDto'
      tags:
        - masterData
    parameters: []
  /masterData/getRoles:
    get:
      summary: getRoles
      tags:
        - masterData
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  oData:
                    $ref: '#/components/schemas/DataGridDto'
                required:
                  - oData
      operationId: masterData-getRoles
      description: Получение мастер-данных ролей и доступа
  /masterData/importPositions:
    post:
      summary: importPositions
      operationId: masterData-importPositions
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportMasterDataResultDto'
      description: Загрузка мастер-данных позиций
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImportMasterDataRequestDto'
      tags:
        - masterData
    parameters: []
  /masterData/getPositions:
    get:
      summary: getPositions
      tags:
        - masterData
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  oData:
                    $ref: '#/components/schemas/DataGridDto'
                required:
                  - oData
      operationId: masterData-getPositions
      description: Получение мастер-данных позиций
  /masterData/importOrgStructure:
    post:
      summary: importOrgStructure
      operationId: masterData-importOrgStructure
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportMasterDataResultDto'
      description: Загрузка мастер-данных оргструктуры
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImportMasterDataRequestDto'
      tags:
        - masterData
    parameters: []
  /masterData/getOrgStructure:
    get:
      summary: getOrgStructure
      tags:
        - masterData
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  oData:
                    $ref: '#/components/schemas/DataGridDto'
                required:
                  - oData
      operationId: masterData-getOrgStructure
      description: Получение мастер-данных оргструктуры
  /masterData/importJobs:
    post:
      summary: importJobs
      operationId: masterData-importJobs
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportMasterDataResultDto'
      description: Загрузка мастер-данных каталога должностей
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImportMasterDataRequestDto'
      tags:
        - masterData
    parameters: []
  /masterData/getJobs:
    get:
      summary: getJobs
      tags:
        - masterData
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  oData:
                    $ref: '#/components/schemas/DataGridDto'
                required:
                  - oData
      operationId: masterData-getJobs
      description: Получение мастер-данных каталога должностей
  /masterData/importFaq:
    post:
      summary: importFaq
      operationId: masterData-importFaq
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportMasterDataResultDto'
      description: Загрузка мастер-данных FAQ
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImportMasterDataRequestDto'
      tags:
        - masterData
    parameters: []
  /masterData/getFaq:
    get:
      summary: getFaq
      tags:
        - masterData
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  oData:
                    $ref: '#/components/schemas/DataGridDto'
                required:
                  - oData
      operationId: masterData-getFaq
      description: Получение мастер-данных FAQ
  /masterData/importCurrencies:
    post:
      summary: importCurrencies
      operationId: masterData-importCurrencies
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportMasterDataResultDto'
      description: Загрузка мастер-данных справочника валют
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImportMasterDataRequestDto'
      tags:
        - masterData
    parameters: []
  /masterData/getCurrencies:
    get:
      summary: getCurrencies
      tags:
        - masterData
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  oData:
                    $ref: '#/components/schemas/DataGridDto'
                required:
                  - oData
      operationId: masterData-getCurrencies
      description: Получение мастер-данных справочника валют
  /masterData/importFrequencies:
    post:
      summary: importFrequencies
      operationId: masterData-importFrequencies
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportMasterDataResultDto'
      description: Загрузка мастер-данных частоты выплат
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImportMasterDataRequestDto'
      tags:
        - masterData
    parameters: []
  /masterData/importExchangeRates:
    post:
      summary: importExchangeRates
      operationId: masterData-importExchangeRates
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportMasterDataResultDto'
      description: Загрузка мастер-данных курсов обмена валют
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImportMasterDataRequestDto'
      tags:
        - masterData
    parameters: []
  /masterData/importUsers:
    post:
      summary: importUsers
      operationId: masterData-importUsers
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportMasterDataResultDto'
      description: Загрузка мастер-данных пользователей
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImportMasterDataRequestDto'
      tags:
        - masterData
    parameters: []
  /masterData/getFrequencies:
    get:
      summary: getFrequencies
      tags:
        - masterData
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  oData:
                    $ref: '#/components/schemas/DataGridDto'
                required:
                  - oData
      operationId: masterData-getFrequencies
      description: Получение мастер-данных частоты выплат
  /masterData/getExchangeRates:
    get:
      summary: getExchangeRates
      tags:
        - masterData
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  oData:
                    $ref: '#/components/schemas/DataGridDto'
                required:
                  - oData
      operationId: masterData-getExchangeRates
      description: Получение мастер-данных курсов обмена валют
  /masterData/getUsers:
    get:
      summary: getUsers
      tags:
        - masterData
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  oData:
                    $ref: '#/components/schemas/DataGridDto'
                required:
                  - oData
      operationId: masterData-getUsers
      description: Получение мастер-данных пользователей
  /masterData/clearData:
    post:
      summary: clearData
      operationId: post-masterData-clearData
      responses:
        '200':
          description: OK
      description: Очистка всех мастер-данных
      tags:
        - masterData
components:
  schemas:
    DataGridDto:
      title: DataGridDto
      type: object
      description: Таблица с данными
      properties:
        aHeader:
          type: array
          description: Заголовок таблицы
          items:
            type: object
            description: Данные колонки
            properties:
              sValue:
                type: string
                description: Название колонки
            required:
              - sValue
        aRows:
          type: array
          description: Строки таблицы
          items:
            type: object
            description: Данные строки
            properties:
              aCells:
                type: array
                description: Ячейки строки
                items:
                  type: object
                  description: Данные ячейки строки
                  properties:
                    sValue:
                      type: string
                      description: Значение ячейки
            required:
              - aCells
      required:
        - aHeader
        - aRows
    ImportMasterDataRequestDto:
      title: ImportMasterDataRequestDto
      type: object
      properties:
        sFileContent:
          type: string
          description: 'Содержимое файла, с префиксом data:text/plain;base64,'
      required:
        - sFileContent
      description: Мастер-данные для импорта
    ImportMasterDataResultDto:
      title: ImportMasterDataResultDto
      type: object
      properties:
        bSuccess:
          type: boolean
          description: Признак успешной загрузки
        sError:
          type: string
          description: 'Описание ошибок загрузки, если они есть'
      required:
        - bSuccess
      description: Результат импорта мастер-данных
    PermissionsDto:
      title: PermissionsDto
      type: object
      description: Информация о правах доступа
      properties:
        bFullDataAccess:
          type: boolean
          description: 'Полный доступ к данным, до загрузки ролей'
        bAdministration:
          type: boolean
          description: 'Доступ к админ интерфейсу (загрузка, выгрузка, редактирование базы данных)'
        bPlanningParticipantsDistribution:
          type: boolean
          description: Распределение участников процесса планирования
        bViewData:
          type: boolean
          description: Просмотр данных
        bEditData:
          type: boolean
          description: Редактирование данных
        bCreatingCustomFilters:
          type: boolean
          description: Создание кастомных фильтров (в рамках полномочий)
        bAnalytics:
          type: boolean
          description: Доступ в аналитику по изменения (в рамках полномочий)
        bNotifications:
          type: boolean
          description: Доступ к уведомлениям по изменениям (в рамках полномочий)
        bPlanApproveAndSubmit:
          type: boolean
          description: 'Approve & Submit плана'
        bViewPlanStatus:
          type: boolean
          description: Просмотр статуса изменения ресурсного плана
        bPlanApprove:
          type: boolean
          description: Approve плана
      required:
        - bFullDataAccess
        - bAdministration
        - bPlanningParticipantsDistribution
        - bViewData
        - bEditData
        - bCreatingCustomFilters
        - bAnalytics
        - bNotifications
        - bPlanApproveAndSubmit
        - bViewPlanStatus
        - bPlanApprove
